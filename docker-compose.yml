services:
  # --- CLOUD ETL (runs against RDS + S3, no local Postgres) ---
  etl-cloud:
    build:
      context: .
      dockerfile: Dockerfile.etl          # <— your ETL Dockerfile
    command: ["scripts/python", "pipeline.py"]
    environment:
      # RDS
      RDS_HOST: ${RDS_HOST}
      RDS_PORT: ${RDS_PORT}
      RDS_DB: ${RDS_DB}
      RDS_USER: ${RDS_USER}
      RDS_PASSWORD: ${RDS_PASSWORD}
      # S3
      AWS_REGION: ${AWS_REGION}
      S3_BUCKET: ${S3_BUCKET}
      S3_PREFIX: ${S3_PREFIX}

  # --- APACHE SUPERSET (Bi Tool) ---
  superset:
    build:
      context: .
      dockerfile: Dockerfile.superset
    container_name: superset
    ports:
      - "80:8088"            # use SG’s open HTTP port
    environment:
      SUPERSET_SECRET_KEY: ${SUPERSET_SECRET_KEY}
      SUPERSET_ADMIN_USERNAME: ${SUPERSET_ADMIN_USERNAME}
      SUPERSET_ADMIN_PASSWORD: ${SUPERSET_ADMIN_PASSWORD}
      SUPERSET_ADMIN_EMAIL: ${SUPERSET_ADMIN_EMAIL}
    volumes:
      - superset_home:/app/superset_home
    command: >
      bash -lc "
      superset db upgrade &&
      (superset fab create-admin
        --username ${SUPERSET_ADMIN_USERNAME}
        --firstname Admin
        --lastname User
        --email ${SUPERSET_ADMIN_EMAIL}
        --password ${SUPERSET_ADMIN_PASSWORD} || true) &&
      superset init &&
      gunicorn -w 4 --timeout 300 -b 0.0.0.0:8088 'superset.app:create_app()'
      "

volumes:
  superset_home:



